{
	"metadata": {
		"version": 1
	},
	"application": {
		"name": "SpringBootServer",
		"language": "JAVA",
		"artifact_store": {
			"type": "s3",
			"repositories": [
				{
					"category": "rc-packaging",
					"bucket": "guide-rails-calculi-rc"
				},
				{
					"category": "final-packaging",
					"bucket": "guide-rails-calculi-final"
				},
				{
					"category": "logs",
					"bucket": "guide-rails-calculi-logs"
				}
			]
		}
	},
	"pipeline": {
		"segments": [
			{
				"name": "Build",
				"segment_type": "build",
				"job_steps": [
					{
						"name": "Print Env",
						"definition": "Print Environment",
						"command": "printenv | sort",
						"properties": null
					},
					{
						"name": "Install Zulu-12",
						"definition": "Install Zulu-12",
						"command": "apt-get -y install software-properties-common\napt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0xB1998361219BD9C9\napt-add-repository 'deb http://repos.azulsystems.com/ubuntu stable main'\napt-get update\napt -y install zulu-12\nexport JAVA_HOME=/usr/lib/jvm/zulu-12-amd64",
						"properties": null
					},
					{
						"name": "Build",
						"definition": "Build",
						"command": "export JAVA_HOME=/usr/lib/jvm/zulu-12-amd64\n./gradlew build\ncp build/test-results/test/TEST-com.calculi.springbootserver.SpringBootServerApplicationTests.xml test.xml\ncp build/reports/jacoco/test/jacocoTestReport.xml coverage.xml\ncp build/libs/*.war .\n",
						"properties": null
					},
					{
						"name": "Build Integration Package",
						"definition": "Creates a standalone set of integration tests",
						"command": "tar -cf integration-test.tar -X .tarignore *",
						"properties": null
					}
				],
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": {
							"publish": true,
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": null
					},
					"on_failure": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": null
					},
					"on_abort": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": null
					}
				},
				"properties": [
					{
						"name": "gradle.user.home",
						"description": "GRADLE_USER_HOME is set to ${SEGMENT_BASE_DIR}/cache/.gradle by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.gradle"
					},
					{
						"name": "ivy.defaultCacheDir",
						"description": "ivy cache directory is set to ${SEGMENT_BASE_DIR}/cache/.ivy by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.ivy"
					},
					{
						"name": "maven.repo.local",
						"description": "maven local repository is set to ${SEGMENT_BASE_DIR}/cache/.m2 by default, when caching is enabled. Caches are maintained on the worker where your build gets allocated. For a new worker assigned to the build, the cache will be re-created",
						"value": "${SEGMENT_BASE_DIR}/cache/.m2"
					}
				],
				"deployment_strategy": {},
				"application_init": {
					"command": "",
					"arguments": null
				},
				"packages": [
					{
						"name": "server",
						"dependencies": [
							"jdk"
						],
						"downloads": [],
						"files": [
							"SpringBootServer*.war"
						],
						"package_install_command": "",
						"installed_path": ""
					},
					{
						"name": "integration",
						"dependencies": [],
						"downloads": [],
						"files": [
							"integration-test.tar"
						],
						"package_install_command": "",
						"installed_path": ""
					},
					{
						"name": "jdk",
						"dependencies": [],
						"downloads": [
							{
								"link": "https://s3.amazonaws.com/calculi-middleware/jdk-12_linux-x64_bin.tar.gz",
								"name": "jdk.tar.gz"
							}
						],
						"files": [],
						"package_install_command": "tar xzf jdk/jdk.tar.gz\ncp -Rf jdk-12/* ${BOSH_INSTALL_TARGET}",
						"installed_path": ""
					}
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"post_deployment_actions": {
					"instances": null,
					"loadbalanced": false,
					"loadbalancer": {
						"TargetGroupName": "",
						"TargetGroupPort": 0,
						"TargetGroupProtocol": "",
						"TargetType": "",
						"VPCID": "",
						"HealthCheckEnabled": false,
						"HealthCheckPort": "",
						"UnhealthyThresholdCount": 0
					}
				},
				"cache_info": {
					"paths": [
						"((gradle.user.home))",
						"((ivy.defaultCacheDir))",
						"((maven.repo.local))"
					]
				}
			},
			{
				"name": "Integration",
				"segment_type": "integration",
				"run_after": [
					"Build"
				],
				"job_steps": [
					{
						"name": "Prepare Integration Tests",
						"definition": "Prepare Integration Tests",
						"command": "cp ${PKG_BASE_DIR}/integration/integration-test.war .\ntar xf integration-test.war",
						"properties": null
					},
					{
						"name": "run tests",
						"definition": "run tests",
						"command": "echo export JAVA_HOME=/usr/lib/jvm/zulu-12-amd64\n./gradlew integrationTest\ncp build/test-results/integrationTest/TEST-ZeroTest.xml test.xml",
						"properties": null
					}
				],
				"exit_actions": {
					"default": {
						"fetch_logs": true,
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": {
							"publish": false,
							"properties": null
						},
						"delete_instances": true
					},
					"on_success": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": {
							"publish": false,
							"properties": null
						}
					},
					"on_failure": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": {
							"publish": false,
							"properties": null
						}
					},
					"on_abort": {
						"notifications": [
							{
								"type": "slack",
								"send_notification": false,
								"to": null,
								"message": ""
							}
						],
						"code_analysis": {
							"publish": false,
							"properties": null
						}
					}
				},
				"deployment_strategy": {
					"canaries": 1,
					"max_in_flight": 1,
					"canary_watch_time": "5000-60000",
					"update_watch_time": "5000-60000",
					"serial": false
				},
				"application_init": {
					"command": "",
					"arguments": null
				},
				"process": {
					"init": {
						"command": ""
					}
				},
				"package_dependencies": [
					"server",
					"integration",
					"jdk"
				],
				"instance_tags": [
					{
						"name": "application.name",
						"value": "((application.name))"
					}
				],
				"instance_groups": [
					{
						"name": "((application.name))",
						"number_of_instances": 1,
						"persistent_disk_type": "",
						"vm_type": "default",
						"os_type": "default",
						"networks": [
							"((deploy.target.network.integration))"
						],
						"availability_zones": [
							"((deploy.target.zone.integration))"
						],
						"deployment_strategy": {},
						"dependencies": [
							{
								"name": "consul",
								"release": "consul",
								"provides": [
									{
										"name": "consul_servers.as",
										"value": "consul_1"
									}
								],
								"consumes": [
									{
										"name": "consul_servers.from",
										"value": "consul_1"
									}
								],
								"properties": [
									{
										"name": "consul.servicename",
										"value": "((consul.servicename))"
									},
									{
										"name": "consul.environment",
										"value": "((consul.environment))"
									},
									{
										"name": "consul.datacenter",
										"value": "((consul.datacenter))"
									},
									{
										"name": "consul.server",
										"value": "false"
									},
									{
										"name": "consul.joinservers",
										"value": "((consul.joinservers))"
									},
									{
										"name": "calculi.intermediate.cert",
										"value": "grsecret:tls.cert"
									},
									{
										"name": "calculi.intermediate.key",
										"value": "grsecret:tls.key"
									}
								]
							}
						]
					}
				],
				"post_deployment_actions": {
					"instances": null,
					"loadbalanced": false,
					"loadbalancer": {
						"TargetGroupName": "",
						"TargetGroupPort": 0,
						"TargetGroupProtocol": "",
						"TargetType": "",
						"VPCID": "",
						"HealthCheckEnabled": false,
						"HealthCheckPort": "",
						"UnhealthyThresholdCount": 0
					}
				}
			}
		],
		"exit_actions": {
			"default": {
				"fetch_logs": true,
				"notifications": [
					{
						"type": "slack",
						"send_notification": false,
						"to": null,
						"message": ""
					}
				],
				"code_analysis": {
					"publish": true,
					"properties": null
				},
				"delete_instances": true
			},
			"on_success": {
				"notifications": [
					{
						"type": "slack",
						"send_notification": false,
						"to": null,
						"message": ""
					}
				],
				"code_analysis": null
			},
			"on_failure": {
				"notifications": [
					{
						"type": "slack",
						"send_notification": false,
						"to": null,
						"message": ""
					}
				],
				"code_analysis": null
			},
			"on_abort": {
				"notifications": [
					{
						"type": "slack",
						"send_notification": false,
						"to": null,
						"message": ""
					}
				],
				"code_analysis": null
			}
		},
		"default_properties": [
			{
				"name": "os.type",
				"value": "ubuntu-xenial",
				"type": "string"
			},
			{
				"name": "os.version",
				"value": "latest",
				"type": "string"
			},
			{
				"name": "additional_properties_file",
				"value": "sonar-project.properties",
				"type": "string"
			}
		],
		"deployment_files": [
			{
				"source_path": "ci/start.sh",
				"target_path": "bin/start.sh"
			}
		],
		"application_init": {
			"command": "",
			"arguments": null
		},
		"process": {
			"init": {
				"command": "bin/start.sh"
			},
			"stop": {
				"command": [
					"kill `cat SpringBootServer.pid`",
					"rm SpringbootServer.pid"
				]
			},
			"pid": {
				"command": [
					"cp SpringBootServer.pid ${APPLICATION_PID_FILE}"
				]
			}
		},
		"releases": [
			{
				"name": "consul",
				"version": "latest"
			}
		]
	},
	"organization": {
		"orgname": "Tutorial"
	}
}